{"version":3,"sources":["App.tsx","index.tsx"],"names":["Wrapper","styled","motion","div","Box","Grid","Overlay","App","useState","id","setId","map","n","layoutId","onClick","AnimatePresence","initial","opacity","backgroundColor","animate","exit","style","width","height","GlobalStyle","createGlobalStyle","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mNASMA,EAAUC,YAAOC,IAAOC,IAAdF,CAAH,qIAQPG,EAAMH,YAAOC,IAAOC,IAAdF,CAAH,gLAOHI,EAAOJ,IAAOE,IAAV,+MAYJG,EAAUL,YAAOC,IAAOC,IAAdF,CAAH,4JAmCEM,I,EAAAA,EAzBf,WACE,MAAoBC,mBAAwB,MAA5C,mBAAOC,EAAP,KAAWC,EAAX,KAEA,OACE,eAACV,EAAD,WACE,cAACK,EAAD,UACG,CAAC,IAAK,IAAK,IAAK,KAAKM,KAAI,SAACC,GAAD,OACxB,cAACR,EAAD,CAAaS,SAAUD,EAAGE,QAAS,kBAAMJ,EAAME,KAArCA,QAGd,cAACG,EAAA,EAAD,UACGN,EACC,cAACH,EAAD,CACEU,QAAS,CAAEC,QAAS,EAAGC,gBAAiB,oBACxCC,QAAS,CAAEF,QAAS,EAAGC,gBAAiB,sBACxCE,KAAM,CAAEH,QAAS,EAAGC,gBAAiB,oBAHvC,SAKE,cAACd,EAAD,CAAKS,SAAUJ,EAAIY,MAAO,CAAEC,MAAO,IAAKC,OAAQ,SAEhD,WC5DNC,EAAcC,YAAH,ogDAkEjBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,eAAC,IAAD,WACE,cAACJ,EAAD,IACA,cAAC,EAAD,SAGJK,SAASC,eAAe,W","file":"static/js/main.8e502066.chunk.js","sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport styled from \"styled-components\";\nimport {\n  motion,\n  useMotionValue,\n  useTransform,\n  useViewportScroll,\n  AnimatePresence,\n} from \"framer-motion\";\nconst Wrapper = styled(motion.div)`\n  height: 100vh;\n  width: 100vw;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Box = styled(motion.div)`\n  height: 200px;\n  background-color: white;\n  border-radius: 40px;\n  box-shadow: 0 2px 3px rgba(0, 0, 0, 0.1), 0 10px 20px rgba(0, 0, 0, 0.06);\n`;\n\nconst Grid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  width: 50vw;\n  gap: 10px;\n  div:first-child,\n  div:last-child {\n    grid-column: span 2;\n    width: 100%;\n  }\n`;\n\nconst Overlay = styled(motion.div)`\n  width: 100%;\n  height: 100%;\n\n  position: absolute;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nfunction App() {\n  const [id, setId] = useState<null | string>(null);\n\n  return (\n    <Wrapper>\n      <Grid>\n        {[\"1\", \"2\", \"3\", \"4\"].map((n) => (\n          <Box key={n} layoutId={n} onClick={() => setId(n)} />\n        ))}\n      </Grid>\n      <AnimatePresence>\n        {id ? (\n          <Overlay\n            initial={{ opacity: 0, backgroundColor: \"rgba(0, 0, 0, 0)\" }}\n            animate={{ opacity: 1, backgroundColor: \"rgba(0, 0, 0, 0.5)\" }}\n            exit={{ opacity: 0, backgroundColor: \"rgba(0, 0, 0, 0)\" }}\n          >\n            <Box layoutId={id} style={{ width: 500, height: 200 }}></Box>\n          </Overlay>\n        ) : null}\n      </AnimatePresence>\n    </Wrapper>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { RecoilRoot } from \"recoil\";\nimport App from \"./App\";\nimport { createGlobalStyle } from \"styled-components\";\nconst GlobalStyle = createGlobalStyle`\n@import url('https://fonts.googleapis.com/css2?family=Source+Sans+Pro:wght@300;400&display=swap');\nhtml, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, menu, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed,\nfigure, figcaption, footer, header, hgroup,\nmain, menu, nav, output, ruby, section, summary,\ntime, mark, audio, video {\n  margin: 0;\n  padding: 0;\n  border: 0;\n  font-size: 100%;\n  font: inherit;\n  vertical-align: baseline;\n}\n/* HTML5 display-role reset for older browsers */\narticle, aside, details, figcaption, figure,\nfooter, header, hgroup, main, menu, nav, section {\n  display: block;\n}\n/* HTML5 hidden-attribute fix for newer browsers */\n*[hidden] {\n    display: none;\n}\nbody {\n  line-height: 1;\n}\nmenu, ol, ul {\n  list-style: none;\n}\nblockquote, q {\n  quotes: none;\n}\nblockquote:before, blockquote:after,\nq:before, q:after {\n  content: '';\n  content: none;\n}\ntable {\n  border-collapse: collapse;\n  border-spacing: 0;\n}\n* {\n  box-sizing: border-box;\n}\nbody {\n  font-weight: 300;\n  font-family: 'Source Sans Pro', sans-serif;\n \n  color:black;\n  line-height: 1.2;\n  background:linear-gradient(135deg,#e09,#d0e);\n}\na {\n  text-decoration:none;\n  color:inherit;\n}\n`;\n\nReactDOM.render(\n  <React.StrictMode>\n    <RecoilRoot>\n      <GlobalStyle />\n      <App />\n    </RecoilRoot>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}